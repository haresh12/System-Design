/**
 *   FROM NOW THIS LEARNING.JS WILL BE DEVIDED INTO TWO PARTS FIRST PART WILL CONTAINS BASICS LIKE ONLY IMPORTENT POINTS AND SENCOND PART
 *   WILL COVER INDEPTH KNOWLEDGE ON THOSE IMPORTENT POINTS
 */


/**
 *                                      PART ONE IMPORTENT POINTS
 * 
 * 
 *   COMMUNICATION TECHNIQUES =====> 
 * 
 *   Things that we are going to cover :
 * 
 *   Short Polling
 *   Long Polling
 *   Websocket
 *   Server Side Events 
 *   Webhooks (Differnt then websocket)
 * 
 * 
 *   WEBHOOKS IS LIT
 * 
 *   FOR FOREX APP REALLY POLLING WILL WORK BECAUSE IN FEW SECONDS MARKET CAN BE HELL CRASH
 * 
 * 
 *  SHORT POLLING : ===> Short Live connection => No persistance connection
 *          YOU HAVE 1M USER AND EVERY 5 SEC YOU MAKE REQUEST ITS HELL EVERY 10 SEC YOUR SERVER RECEIVE 1AM REQUEST
 * 
 *  SHORT POLLING IS SIMPLE ITS LIKE NORMAL REST CALL BUT IN SOME INTREVAL 
 * 
 *  ALWAYS INSURE REMOVE OR STOP SETINTERVAL()  clearInterval(interval)
 *  
 * 
 *  LONG POLLING : Single One lived connection
 *                 Connection is open until you get data or there is some timeout
 *                 Less number of request
 *      
 *                CONST : LOT OF ACTIVE CONNECTIONS I SEE I UNDERSTAND
 * 
 *                IN LONG POLLING SERVER CONFIG MATTERS
 *                
 * 
 * 
 *  WEB-SOCKET :   FULL DUPLEX COMMUNICATION 
 *                 Bidirectional Communication
 *                 Single long live TCP connection
 *                 
 *    HTTP UPGRAD REQUEST MUST UNDERSTAND FIRST REQUEST
 *    YES SOCKET.IO IS BEST FOR WEBSOCKET COMMUNICATION         SOCKET.IO CREATE ONE BASIC EXAMPLE
 * 
 *   connection , disconnect all this are events we have in Socket.io 
 * 
 *  101 swiching protocol =>>>>> MUST UNDERSTAND 
 * 
 *  Data framing 
 * 
 *  Connection limits in some of the provider
 *  
 *  Resource clean up is must its like event listner
 * 
 * 
 *  SERVER-SIDE EVENTS ===>>>>
 * 
 *      THIS IS I THING GOOD ONE AND NEW THING I LEARNED BECAUSE HERE YOU MAKE REQUEST ONE TIME TO SERVER AND AFTER THAT ITS SERVER JOB TO SEND EVENTS WHEN EVER SOME CHANGES HAPPEN
 * 
 *     EVENT STREAM SOMETHING NEW FOR ME
 * 
 *     NORMAL STRUCTURE : event | data | id
 * 
 *    OK ONE THING TO UNDERSTAND HERE IS FOR SERVER SIDE EVENTS AND WE DON'T HAVE ANY DIFFERENT LIBRARY OR SOMETHING THE ENTIRE GAME OF HEADER HERE WHEN WE MAKE REQUEST  OR WE CAN SAY WHEN WE 
 *    CRETE API WE JUST NEED TO CARE ABOUT SETTING UP FEW HEADERS
 * 
 * 
 *    setHeader('content-type','text/event-stream');
 *    setHeader('connection','keep-alive');
 *    setHeader('catch-control','no-cathe'); //  NO SURE THIS IS NEEDED OR NOT BUT ABOVE 2 1000% MAKE SENSE
 * 
 * 
 *    EventSource(); // new thing that provided by all morden browser MAKE SURE GO DEEP INTO THIS FOR SURE
 * 
 *    SO SERVER SIDE HEADERS METTERS AND CLIENT SIDE EVENSOURCE MATTERS
 *         
 */



/**
 *                                        IN DEPTH FOR EACH TOPIC
 * 
 * 
 *    SEE ONE THING WE NEED TO BE CLEAR BEFORE WE START ANY MODULE IS LIKE WHAT WE ARE GOING TO COVER INTO THAT MODULE.
 * 
 *    SO IN THIS MODULE WE ARE GOING TO TALK ABOUT COMUNICATION TECHNIQUES AND WHAT DO WE MEAN BY THAT IS LIKE WHAT ARE THE DIFFERENT
 *    OPTIONS WE HAVE FOR COMMINCATION HOW DIFFERENTS WAY CLIENT AND SERVER CAN COMMINCATE SO THATS ALL WE ARE GOING TO COVER LETS LIST
 *    OUT THE TOPICS
 * 
 *    1. SHORT POLLING 
 *    2. LONG POLLING (MUST GO DEEP AND I NEED TO SEE REAL WORLD EXAMPLE FOR THIS)
 *    3. WEBSOCKET : (MOSTLY EVERY ONE HAS HEARD ABOUT IT AND USED IT ATLEAST ONCE)
 *    4. SERVER SIDE EVENTS : (NEW FOR ME)
 *    5. WEBHOOK (FAMOUS BUT ONCE ITS LIKE SIMPLE POST API WHICH GET TRIGGERED AFTER SOME SPECIFIC EVENT) (PAYMENT CONFIRMATION IS BEST EXAMPLE)
 * 
 *    IMPORTENT QUESTION THAT CAN BE ASKED 
 *        >>DIFFERANCE BETWEEN ALL OF THEM 
 *        >> UNIDIRECTIONAL AND  BIDIREACTIONAL   (THIS IS MUST MUST MUST DO QUESTION)
 * 
 * 
 *                               BEFORE GOING DEEP INTO EACH OF THE TECHNIQUE LET'S GO WITH ONE EXAMPLE
 * 
 * 
 *    SEE YOU VISITED ONE RESTAURANT WHERE YOU VISITED
 * 
 *        >>> SHORT POLLING : YOU ORDERD SOMETHING FROM RESTAURANT WAITOR TOOK YOUR ORDER NOW AS YOU ARE HUNGER AND CAN'T NOT WAIT MORE
 *                            AGAIN AND AGAIN YOU ASK WAITOR IS ORDER IS READY AND WAITOR GOES TO KITCHEN TO GET UPDATE AND COMES WITH
 *                            RESPONSE . THIS IS BASICALLY SHORT POLLING WHERE IN SOME INTERVAL AGAIN AND AGAIN YOU MAKE NEW CONNECTION
 *                            WITH SERVER AND SERVER COMES BACK TO YOU WITH RESPONSE
 * 
 * 
 *    >>>> LONG POLLING : NOW HERE WAITOR BECOME SMART AND AS SOON AS YOU ASKED WAITOR BHAI KAHANA READY HAI HE GOES TO KITCHEN AND STANDS
 *                        THERE UNTIL FOOD IS PREPARED AND COMES ONLY WHEN FOOD IS READY THIS WAY WAITOR DOES NOT HAVE TO COME AND GO AGAIN
 *                        AND AGAIN.
 * 
 * 
 *   >>>>  WEBSOCKET :  NOW HERE YOU BECAME SMART YOU UNDERSTOOD THAT LAST TIME I ASKED 10 ITEMS TOGETHER THEN IT TOOK SO LONG SO YOU ORDER
 *                      ONE ITEM AND ASKED WAITOR TO KEEP MENU HERE AND I WILL KEEP ORDERING YOU THIS WAY WAITOR AND YOU BOTH ARE IN CONNECTION
 *                      UNTIL YOU ARE NOT DONE WITH YOUR FOOD
 * 
 *  
 *  >>>>> SERVER-SIDE-EVENT : NOW HERE YOUR ROLE IS LIKE NASIB VALE HO BECAUSE SOMEONE HAS BIRTHDAY AND HE ANNOUNCED DRINKS ON ME. SO WAITOR 
 *                            CAME TO YOU AND GAVE YOU DRINK . UNDERSTAND THIS EXAMPLE AS DEEP AS YOU CAN BECAUSE THIS TECHNIQUE IS ALSO VERY
 *                            USEFULL.  ITS LIKE ONE TIME YOU MADE CONNECTION WITH SERVER AND AFTER THAT ANY CHANGES HAPPENS IN SERVER THEN 
 *                            SERVER WILL SEND YOU EVENT . FOR ME ITS LIKE ONE WAY COMMUNICATION BECAUSE HERE CLIENT JOB IS JUST CONNECT FOR 
 *                            ONE TIME.  
 * 
 *                            (FOR SERVER SIDE EVENTS SPEND EXTRA TIME AND CREATE ONE GOOD DEMO)
 * 
 * 
 *  >>>>> WEBHOOK :  FOR THIS I DON'T HAVE ANY GOOD EXAMPLE BUT USED MANY TIME SEE ITS JUST ONE POST URL WHICH WILL BE TRIGGERD ONCE SOME SPECIFIC
 *                   EVENT IS COMPETED AND YOU WANTED TO NOTIFY THAT TO CLIENT. (MOSTLY WE HAVE SEEN IN PAYMENT CONFIRMATION I HAVE USE IN STREAM
 *                   CHAT ALSO)
 *   
 */